{"version":3,"sources":["components/Todo.jsx","components/CreateTodo.jsx","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","completeTodo","deleteTodo","todoArr","len","JSON","parse","localStorage","getItem","className","length","map","ele","i","title","onClick","CreateTodo","useState","done","todo","setTodo","setTodoArr","todos","hasOwnProperty","createTodo","event","name","target","key","unshift","setItem","stringify","swal","type","placeholder","onChange","value","obj","onKeyPress","text","icon","buttons","dangerMode","then","response","splice","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAsBeA,MAtBf,SAAcC,GACV,IAAOC,EAA8BD,EAA9BC,aAAeC,EAAeF,EAAfE,WAClBC,EAAUH,EAAMG,QAAQC,IAAM,EAAIJ,EAAMG,QAAUE,KAAKC,MAAMC,aAAaC,QAAQ,UAEtF,OACI,qBAAKC,UAAY,OAAjB,SACI,6BACKN,GAAWA,EAAQO,OAAS,EAAIP,EAAQQ,KAAI,SAACC,EAAMC,GAAP,OACzC,+BACA,qBAAKJ,UAAYG,EAAG,KAAW,eAAiB,KAAhD,SAAuDA,EAAIE,QAC3D,sBAAKL,UAAY,OAAjB,UACI,mBAAGK,MAAQ,WAAWC,QAAU,kBAAId,EAAaY,IAAIJ,UAAS,sCAAmCG,EAAG,KAAW,QAAU,UAEzH,mBAAGE,MAAQ,SAASC,QAAW,kBAAIb,EAAWW,IAAIJ,UAAY,kCALzDI,MAQR,U,gBCuENG,MAnFf,WACE,MAAwBC,mBAAS,CAAEH,MAAO,GAAII,MAAM,IAApD,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BH,mBAAS,IAAvC,mBAAOd,EAAP,KAAgBkB,EAAhB,KACIC,EAAQf,aAAagB,eAAe,SACpClB,KAAKC,MAAMC,aAAaC,QAAQ,UAChC,GAQEgB,EAAa,SAACC,GAClB,IAAQC,EAASD,EAAME,OAAfD,KACU,UAAdD,EAAMG,KAA4B,YAATF,IACR,KAAfP,EAAKL,OACPQ,EAAMO,QAAQV,GACdZ,aAAauB,QAAQ,QAASzB,KAAK0B,UAAUT,IAC7CF,EAAQ,CAAEN,MAAO,GAAII,MAAM,KAE3Bc,IAAK,QAAS,wBAAyB,WA4B7C,OACE,qCACE,sBAAKvB,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,UACE,gDACA,mDAEF,sBAAKA,UAAU,eAAf,UACE,uBACEwB,KAAK,OACLP,KAAK,OACLQ,YAAY,gBACZC,SAvDO,SAACV,GAChB,IAAMW,EAAUX,EAAME,OAAhBS,MACFC,EAAM,GACVA,EAAG,MAAYD,EACfC,EAAG,MAAW,EACdjB,EAAQiB,IAmDAD,MAAOjB,EAAKL,MACZwB,WAAYd,IAEd,wBACEf,UAAU,cACVwB,KAAK,SACLP,KAAK,UACLX,QAASS,EAJX,4BAUJ,cAAC,EAAD,CACErB,QAASA,EACTF,aApDe,SAACY,IACK,IAArBS,EAAMT,GAAN,OACFS,EAAMT,GAAN,MAAmB,EACnBN,aAAauB,QAAQ,QAASzB,KAAK0B,UAAUT,IAC7CD,EAAWC,GACXU,IAAK,YAAa,iBAAkB,aAgDlC9B,WA5Ca,SAACW,GAClBmB,IAAK,CACHlB,MAAO,gBACPyB,KAAM,8DACNC,KAAM,UACNC,SAAS,EACTC,YAAY,IACXC,MAAK,SAACC,GACHA,IACFtB,EAAMuB,OAAOhC,EAAG,GAChBN,aAAauB,QAAQ,QAASzB,KAAK0B,UAAUT,IAC7CD,EAAWC,cCvCJwB,MARf,WACE,OACC,qBAAKrC,UAAY,YAAjB,SACC,cAAC,EAAD,OCOWsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b100484a.chunk.js","sourcesContent":["function Todo(props) {\r\n    const {completeTodo , deleteTodo}  = props\r\n    let todoArr = props.todoArr.len > 0 ? props.todoArr : JSON.parse(localStorage.getItem(\"todos\"))\r\n   \r\n    return (\r\n        <div className = \"box1\">\r\n            <ul>\r\n                {todoArr && todoArr.length > 0 ? todoArr.map((ele , i) =>(\r\n                    <li key={i}>\r\n                    <div className ={ele[\"done\"] ? \"line-through\" : null}>{ele.title}</div>\r\n                    <div className = \"icon\">\r\n                        <i title = \"Complete\" onClick ={()=>completeTodo(i)} className = {`fas fa-check-circle pointer ${ele[\"done\"] ? \"green\" : \"blue\"}`}/>\r\n                        {/* <i title = \"Edit\" onClick ={ () => handleEdit(i)} className=\"far fa-edit\"/>  */}\r\n                        <i title = \"Delete\" onClick = {()=>deleteTodo(i)} className = \"fas fa-trash-alt pointer\" />\r\n                    </div>\r\n                </li>\r\n                )) : null \r\n            }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default Todo\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport { useState } from \"react\";\r\nimport swal from \"sweetalert\";\r\nfunction CreateTodo() {\r\n  const [todo, setTodo] = useState({ title: \"\", done: false });\r\n  const [todoArr, setTodoArr] = useState([]);\r\n  let todos = localStorage.hasOwnProperty(\"todos\")\r\n    ? JSON.parse(localStorage.getItem(\"todos\"))\r\n    : [];\r\n  const onChange = (event) => {\r\n    let { value } = event.target;\r\n    let obj = {};\r\n    obj[\"title\"] = value;\r\n    obj[\"done\"] = false;\r\n    setTodo(obj);\r\n  };\r\n  const createTodo = (event) => {\r\n    const { name } = event.target;\r\n    if (event.key === \"Enter\" || name === \"AddTodo\") {\r\n      if (todo.title !== \"\") {\r\n        todos.unshift(todo);\r\n        localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n        setTodo({ title: \"\", done: false });\r\n      } else {\r\n        swal(\"Oops!\", \"Something went wrong!\", \"error\");\r\n      }\r\n    }\r\n  };\r\n  const completeTodo = (i) => {\r\n    if (todos[i][\"done\"] !== true) {\r\n      todos[i][\"done\"] = true;\r\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n      setTodoArr(todos);\r\n      swal(\"Good Job!\", \"Todo Completed\", \"success\");\r\n    }\r\n  };\r\n\r\n  const deleteTodo = (i) => {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once it is deleted , you will not able to recover this row!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    }).then((response) => {\r\n      if (response) {\r\n        todos.splice(i, 1);\r\n        localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n        setTodoArr(todos);\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"box\">\r\n        <div className=\"text-end\">\r\n          <h2>React Todo App</h2>\r\n          <h4>Add a new Todo</h4>\r\n        </div>\r\n        <div className=\"text-addTodo\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"todo\"\r\n            placeholder=\"Write here...\"\r\n            onChange={onChange}\r\n            value={todo.title}\r\n            onKeyPress={createTodo}\r\n          />\r\n          <button\r\n            className=\"btn-addTodo\"\r\n            type=\"button\"\r\n            name=\"addTodo\"\r\n            onClick={createTodo}\r\n          >\r\n            Add Todo\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <Todo\r\n        todoArr={todoArr}\r\n        completeTodo={completeTodo}\r\n        deleteTodo={deleteTodo}\r\n      />\r\n    </>\r\n  );\r\n}\r\nexport default CreateTodo;\r\n","import React from \"react\";\nimport CreateTodo from \"./components/CreateTodo\";\nfunction App() {\n  return (\n   <div className = \"outer-box\">\n    <CreateTodo/>\n   </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"./assets/style.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}